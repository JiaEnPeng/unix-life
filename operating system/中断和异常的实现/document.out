\BOOKMARK [1][-]{section.1}{中断和异常的实现}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{设置8259A}{section.1}% 2
\BOOKMARK [2][-]{subsection.1.2}{建立IDT}{section.1}% 3
\BOOKMARK [2][-]{subsection.1.3}{实现一个中断}{section.1}% 4
\BOOKMARK [2][-]{subsection.1.4}{时钟中断试验}{section.1}% 5
\BOOKMARK [2][-]{subsection.1.5}{几点需要注意的事}{section.1}% 6
\BOOKMARK [1][-]{section.2}{保护模式下的I/O}{}% 7
\BOOKMARK [2][-]{subsection.2.1}{IOPL}{section.2}% 8
\BOOKMARK [2][-]{subsection.2.2}{I/O许可位图}{section.2}% 9
\BOOKMARK [1][-]{section.3}{linux下的内存管理}{}% 10
\BOOKMARK [2][-]{subsection.3.1}{页}{section.3}% 11
\BOOKMARK [2][-]{subsection.3.2}{区}{section.3}% 12
\BOOKMARK [2][-]{subsection.3.3}{gfp_mask标志}{section.3}% 13
\BOOKMARK [2][-]{subsection.3.4}{获得页}{section.3}% 14
\BOOKMARK [2][-]{subsection.3.5}{释放页}{section.3}% 15
\BOOKMARK [2][-]{subsection.3.6}{slab层}{section.3}% 16
\BOOKMARK [3][-]{subsubsection.3.6.1}{slab层的设计}{subsection.3.6}% 17
\BOOKMARK [3][-]{subsubsection.3.6.2}{分配对象}{subsection.3.6}% 18
\BOOKMARK [3][-]{subsubsection.3.6.3}{使用slab层的例子}{subsection.3.6}% 19
\BOOKMARK [1][-]{section.4}{初始化与清理}{}% 20
\BOOKMARK [2][-]{subsection.4.1}{初始化}{section.4}% 21
\BOOKMARK [2][-]{subsection.4.2}{this关键字}{section.4}% 22
\BOOKMARK [3][-]{subsubsection.4.2.1}{利用this调用构造器}{subsection.4.2}% 23
\BOOKMARK [2][-]{subsection.4.3}{成员初始化}{section.4}% 24
\BOOKMARK [3][-]{subsubsection.4.3.1}{使用构造器进行初始化}{subsection.4.3}% 25
\BOOKMARK [3][-]{subsubsection.4.3.2}{显式的静态初始化}{subsection.4.3}% 26
\BOOKMARK [3][-]{subsubsection.4.3.3}{数组初始化}{subsection.4.3}% 27
\BOOKMARK [2][-]{subsection.4.4}{清理}{section.4}% 28
\BOOKMARK [3][-]{subsubsection.4.4.1}{finalize函数的用途}{subsection.4.4}% 29
\BOOKMARK [3][-]{subsubsection.4.4.2}{垃圾回收器的工作机制}{subsection.4.4}% 30
\BOOKMARK [1][-]{section.5}{访问权限控制}{}% 31
\BOOKMARK [2][-]{subsection.5.1}{包:库单元}{section.5}% 32
\BOOKMARK [2][-]{subsection.5.2}{Java访问权限修饰词}{section.5}% 33
\BOOKMARK [3][-]{subsubsection.5.2.1}{包访问权限}{subsection.5.2}% 34
\BOOKMARK [3][-]{subsubsection.5.2.2}{public访问权限}{subsection.5.2}% 35
\BOOKMARK [3][-]{subsubsection.5.2.3}{private访问权限}{subsection.5.2}% 36
\BOOKMARK [3][-]{subsubsection.5.2.4}{protected访问权限}{subsection.5.2}% 37
\BOOKMARK [2][-]{subsection.5.3}{public类}{section.5}% 38
\BOOKMARK [1][-]{section.6}{复用类}{}% 39
\BOOKMARK [2][-]{subsection.6.1}{类的组合}{section.6}% 40
\BOOKMARK [2][-]{subsection.6.2}{类的继承}{section.6}% 41
\BOOKMARK [3][-]{subsubsection.6.2.1}{基类的初始化}{subsection.6.2}% 42
\BOOKMARK [3][-]{subsubsection.6.2.2}{名称屏蔽}{subsection.6.2}% 43
\BOOKMARK [3][-]{subsubsection.6.2.3}{向上转型}{subsection.6.2}% 44
\BOOKMARK [3][-]{subsubsection.6.2.4}{继承技术的用途}{subsection.6.2}% 45
\BOOKMARK [2][-]{subsection.6.3}{final关键字}{section.6}% 46
\BOOKMARK [3][-]{subsubsection.6.3.1}{final数据}{subsection.6.3}% 47
\BOOKMARK [3][-]{subsubsection.6.3.2}{final函数}{subsection.6.3}% 48
\BOOKMARK [3][-]{subsubsection.6.3.3}{final类}{subsection.6.3}% 49
\BOOKMARK [1][-]{section.7}{多态}{}% 50
\BOOKMARK [2][-]{subsection.7.1}{绑定}{section.7}% 51
\BOOKMARK [2][-]{subsection.7.2}{多态的缺陷}{section.7}% 52
\BOOKMARK [3][-]{subsubsection.7.2.1}{private函数无法动态绑定}{subsection.7.2}% 53
\BOOKMARK [3][-]{subsubsection.7.2.2}{域无法动态绑定}{subsection.7.2}% 54
\BOOKMARK [2][-]{subsection.7.3}{协变返回类型}{section.7}% 55
