\contentsline {chapter}{\numberline {1}进程}{2}{chapter.1}
\contentsline {section}{\numberline {1.1}形成进程的必要考虑}{2}{section.1.1}
\contentsline {section}{\numberline {1.2}最简单的进程}{2}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}简单进程中的关键技术}{3}{subsection.1.2.1}
\contentsline {subsubsection}{\numberline {1.2.1.1}进程状态的保存}{3}{subsubsection.1.2.1.1}
\contentsline {subsubsection}{\numberline {1.2.1.2}进程表PCB}{3}{subsubsection.1.2.1.2}
\contentsline {subsubsection}{\numberline {1.2.1.3}进程栈和内核栈}{3}{subsubsection.1.2.1.3}
\contentsline {subsubsection}{\numberline {1.2.1.4}特权级变换}{4}{subsubsection.1.2.1.4}
\contentsline {section}{\numberline {1.3}从ring0到ring1}{5}{section.1.3}
\contentsline {subsection}{\numberline {1.3.1}时钟中断处理程序}{5}{subsection.1.3.1}
\contentsline {subsection}{\numberline {1.3.2}进程表、进程体、GDT、TSS}{5}{subsection.1.3.2}
\contentsline {subsection}{\numberline {1.3.3}一个简单的进程执行体}{6}{subsection.1.3.3}
\contentsline {subsection}{\numberline {1.3.4}定义进程表}{7}{subsection.1.3.4}
\contentsline {subsubsection}{\numberline {1.3.4.1}定义栈帧}{7}{subsubsection.1.3.4.1}
\contentsline {subsubsection}{\numberline {1.3.4.2}定义进程结构体}{8}{subsubsection.1.3.4.2}
\contentsline {subsubsection}{\numberline {1.3.4.3}初始化进程表}{8}{subsubsection.1.3.4.3}
\contentsline {subsection}{\numberline {1.3.5}初始化GDT表中的LDT描述符}{10}{subsection.1.3.5}
\contentsline {subsection}{\numberline {1.3.6}初始化GDT表中的TSS}{10}{subsection.1.3.6}
\contentsline {subsubsection}{\numberline {1.3.6.1}定义TSS}{10}{subsubsection.1.3.6.1}
\contentsline {subsubsection}{\numberline {1.3.6.2}初始化TSS}{11}{subsubsection.1.3.6.2}
\contentsline {subsection}{\numberline {1.3.7}实现从ring0到ring1}{11}{subsection.1.3.7}
\contentsline {subsection}{\numberline {1.3.8}总结}{12}{subsection.1.3.8}
\contentsline {section}{\numberline {1.4}丰富中断处理程序}{13}{section.1.4}
\contentsline {subsection}{\numberline {1.4.1}让时钟中断开始起作用}{13}{subsection.1.4.1}
\contentsline {subsection}{\numberline {1.4.2}现场的保护与恢复}{13}{subsection.1.4.2}
\contentsline {subsection}{\numberline {1.4.3}赋值TSS中的esp0}{14}{subsection.1.4.3}
